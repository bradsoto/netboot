#!/bin/busybox sh
shell(){
  setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
}
clear_line(){
  printf "\r                                                                                                                      \r\
    \033[1A\
    \r                                                                                                                      \r"
}
failure(){
  echo "Error Code" $1
  echo "Restarting in 30s"
  sync
  sleep 25
  reboot -f
}
restart(){
  echo "Rebooting"
  sync
  sleep 5
  reboot -f
}
are_you_sure(){
  while :
  do
    echo "This will erase the current system. Are you sure? (y/n)"
    read -n1 -s answer     
    case $answer in
      y)
        break
      ;; 
      n) 
        restart
      ;;
    esac
    clear_line
  done
}
install_efi_files(){
  mount /dev/sda1 /mnt/efi || failure 05
  echo "Installing UEFI Boot Files"
  tar -xJf /images/efi/efi.tar.xz -C /mnt/efi || failure 07
  if [ -d /sys/firmware/efi ]; then
    mount -t efivarfs -o rw efivarfs /sys/firmware/efi/efivars || failure 07
    efibootmgr -q -c -L "Windows" -l "\efi\boot\bootx64.efi" || failure 08 
    efibootmgr -q -D || failure 09
  else
    # straight-up magical
    echo "Installing BIOS to UEFI Adapter"
    dd if=/images/efi/boot0af of=/dev/sda bs=440 count=1 conv=notrunc &> /dev/null || failure 08
    dd if=/dev/sda1 bs=512 count=1 of=part_mbr_orig &> /dev/null || failure 09
    cp /images/efi/boot1f32 part_mbr_new || failure 10
    dd if=part_mbr_orig of=part_mbr_new skip=3 seek=3 bs=1 count=87 conv=notrunc &> /dev/null || failure 11
    dd if=part_mbr_new of=/dev/sda1 bs=512 count=1 conv=notrunc &> /dev/null || failure 12
    cp /images/efi/boot7 /mnt/efi/boot || failure 13
    mkdir -p /mnt/efi/EFI/CLOVER || failure 14
    cp /mnt/efi/EFI/Boot/bootx64.efi /mnt/efi/EFI/CLOVER/CLOVERX64.efi || failure 15
  fi
  umount /mnt/efi || failure 21
  ntfs-3g /dev/sda2 /mnt/ntfs || failure 06
  if [ -f /images/unattend.xml ]; then
    mkdir -p /mnt/ntfs/Windows/Panther/Unattend || failure 16
    cp /images/unattend.xml /mnt/ntfs/Windows/Panther/Unattend/ || failure 17
  fi
  if [ -f /images/img0.jpg ]; then
    rm -rf /mnt/ntfs/Windows/Web/4K/Wallpaper/* || failure 19
    rm -rf /mnt/ntfs/Windows/Web/Wallpaper/Windows/* || failure 19
    cp /images/img0.jpg /mnt/ntfs/Windows/Web/Wallpaper/Windows/img0.jpg || failure 19
  fi
  umount /mnt/ntfs || failure 20
}
reinstall(){
  echo "Clearing the Disk"
  # magic. we dont have to run bcdboot to get windows to boot if we recycle old UUIDs...
  sgdisk --zap-all \
    --new 1::+100M --typecode=1:ef00 --change-name=1:'EFI System Partition' -u 1:"25A4322D-77E1-4920-839F-8DF27BD5CF10" \
    --new 2::-0 --typecode=2:0700 --change-name=2:'Windows' -u 2:"8F2A36E4-15C0-46BC-B36F-DDB8225A910B" \
    /dev/sda &> /dev/null || failure 00
  sgdisk -U "F83E19B8-A267-4076-A13A-3FD2E6478A6C" /dev/sda &> /dev/null || failure 01
  mkfs.vfat -F32 /dev/sda1 || failure 02
  mkfs.ntfs -Q /dev/sda2 &> /dev/null || failure 03
  wimlib-imagex apply /images/current.esd 1 /dev/sda2 || failure 04
  install_efi_files
}
echo "Mounting System"
/bin/busybox --install -s
mount -t proc none /proc || failure 23
mount -t sysfs none /sys || failure 24
while :
do
  echo "Would you like to (r)einstall Windows, (b)ackup user files and reinstall Windows, or (c)apture a Windows installation?"
  read -n1 -s answer
  case $answer in
    r)
      clear_line
      echo "Reinstalling Windows"
      are_you_sure
      clear_line
      reinstall
      break
    ;;
    b)
      clear_line
      echo "Backing Up User Files and Reinstalling Windows"
      are_you_sure
      clear_line
      echo "Capturing User Files"
      ntfs-3g /dev/sda2 /mnt/ntfs || failure 28
      wimlib-imagex capture /mnt/ntfs/Users /capture/users.wim --compress=fast --chunk-size=64K || failure 29
      umount /mnt/ntfs || failure 30
      reinstall
      echo "Copying User Files to the New System"
      ntfs-3g /dev/sda2 /mnt/ntfs || failure 31
      wimlib-imagex apply /capture/users.wim 1 /mnt/ntfs/Users || failure 32
      umount /mnt/ntfs || failure 33
      rm /capture/users.wim || failure 34
      break
    ;;
    c)
      clear_line
      echo "Capturing Windows Install"
      wimlib-imagex capture /dev/sda2 /capture/current.esd "Windows 10" --solid --solid-compress=LZMS:100 --solid-chunk-size=512M --threads=1 || failure 35
      break
    ;;
    s)
      shell
    ;;
    e)
      install_efi_files
      break
    ;;
  esac
  clear_line
done
restart
